name: 00 - Main backend CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # 1. Build and Unit Test Job
  build-and-unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: "maven"
          cache-dependency-path: "book-network/pom.xml"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and unit test backend
        run: |
          cd book-network
          ./mvnw clean install --batch-mode

      - name: Run Checkstyle
        run: mvn -f book-network/pom.xml checkstyle:check
        continue-on-error: true  # Makes the step optional

      - name: Run PMD
        run: mvn  -f book-network/pom.xml pmd:check
        continue-on-error: true  # Makes the step optional

      - name: Generate Job report
        run: mvn  -f book-network/pom.xml site
        continue-on-error: true


      - name: Upload Job Report
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: book-network/target/site
        if: success()
        continue-on-error: true


  # 2. Integration Test Job (depends on the build-and-unittest job)
  integration-test:
    runs-on: ubuntu-latest
    needs: build-and-unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: "maven"
          cache-dependency-path: "book-network/pom.xml"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Integration Tests
        run: |
          cd book-network
          ./mvnw verify
  # 3. SonarCloud Code Quality Scan Job (runs in parallel with Snyk)
  sonar:
    runs-on: ubuntu-latest
    needs:   integration-test  # Ensure code is built before scanning
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: "maven"
          cache-dependency-path: "book-network/pom.xml"

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=olexiy_book-social-network
